{"mappings":"AAEA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAQ,C,SAAEJ,E,MAAUC,GAAQ,GAE7BA,EAAM,G,CAbAQ,SAASC,cAAc,SAiB/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIC,EAAYC,OAAOH,EAAMI,cAAcf,MAAMgB,OAC7CC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAE/C,GAAGH,EAAY,GAAKI,EAAO,GAAKC,GAAU,EAGxC,OAFAC,MAAM,cACNR,EAAMI,cAAcK,QAItB,IAAI,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAC/BvB,EAAcuB,EAAGR,GAAWS,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MAC5CuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,MAAU,IAC3DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MACpBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,MAAU,IAE3Da,GAAaI,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay })\n      } else {\n        // Reject\n        reject ({ position, delay });\n      }\n    }, delay);\n  })\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event){\n  event.preventDefault();\n  let userDelay = Number(event.currentTarget.delay.value);\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  if(userDelay < 0 || step < 0 || amount <= 0){\n    alert('error');\n    event.currentTarget.reset();\n    return;\n  }\n\n  for(let i = 1; i <= amount; i += 1){\n    createPromise(i, userDelay).then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    }).catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    userDelay += step;\n  };\n};\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","userDelay","Number","currentTarget","value","step","amount","alert","reset","i","then","console","log","catch"],"version":3,"file":"03-promises.cf2d4f8f.js.map"}